"""
Django settings for culture_vaults project.

Generated by 'django-admin startproject' using Django 4.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-hyyrnrixph02*w3d7h-jy=8r^wbd=1$=+*2)9d!%r$8*be8$ha'

# ECRYPTION KEY
EMAIL_ENCRYPTION_KEY = 'GpYzIvMAucwYwgubms-ciU1VZsJNWgSF0QlwEf79zzc='

# # STRIPE

# STRIPE_SECRETE_KEY='sk_test_51O6ugFHIsqFuJF6GU2PJ4fTSs5vYqxWNHzFTwX1ahevz1WZwTJ5tnPRXBMKza5NfbGbSy2jVacYAecENbN6CxVvG00vgrfkgxS'

# # Google OAuth
# # Secrete
# GOOGLE_CLIENT_SECRETE='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'
# # Client
# GOOGLE_CLIENT_ID='863310686936-dv018gvqgmdd7o0b94kbqjgqp386g0af.apps.googleusercontent.com'
# # Google maps token 
# GOOGLE_TOKEN = 'AIzaSyAzU9pbp9l2aLnPqchtzKD9bDMdwSRs4HY'



# STRIPE

STRIPE_SECRETE_KEY='SECRETE_KEY'
# Google OAuth
# Secrete
GOOGLE_CLIENT_SECRETE='SECRETE_KEY'
# Client in case django will need to authenticate using Google OAuth
GOOGLE_CLIENT_ID='GOOLE_CLIENT'
# Google maps token 
GOOGLE_TOKEN = 'GOOLE_TOKEN'


# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

SERVER_IPS = ['http://localhost:8000', 'http://0.0.0.0:8000']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    
    'corsheaders',
    'rest_framework',
    'rest_framework.authtoken',
    # apps created
    'core'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware'
]
# development settings

CORS_ORIGIN_ALLOW_ALL = True

# Production settings

# CORS_ORIGIN_ALLOW_ALL = False
# CORS_ORIGIN_WHITELIST = (
#   'http://localhost:8000',
# )

ROOT_URLCONF = 'culture_vaults.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'culture_vaults.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# Custom AUTH
# AUTHENTICATION_BACKENDS = ['core.CAuthBackend.EmailBackend']

# Django rest configurations
REST_FRAMEWORK = {
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 3,
    'DEFAULT_AUTHENTICATION_CLASSES': [
        # 'core.CAuthBackend.EmailBackend',
        'rest_framework.authentication.TokenAuthentication',
    ],
    'DEFAULT_PARSER_CLASSES': (
        'rest_framework.parsers.JSONParser',
        'rest_framework.parsers.FormParser',
        'rest_framework.parsers.MultiPartParser',
    ),
}

# # SMTP SERVER

# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# EMAIL_HOST = 'smtp.gmail.com'
# EMAIL_PORT = 587
# EMAIL_USE_TLS = True
# EMAIL_HOST_USER = 'sixtabs.utils@gmail.com'
# EMAIL_HOST_PASSWORD = 'krlfkrqaxxuyjhbb'


# SMTP SERVER

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'marlymayienga@gmail.com'
EMAIL_HOST_PASSWORD = 'ueuz apzp uzps feuc'

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
